{"mappings":"YA4FA,IAAMA,EAASC,SAASC,cAAc,aAMlCC,EAAW,IAAIC,sBAQnB,SAAgBC,EAASC,GACvBD,EAAQE,SAAQ,SAAAC,GACVA,EAAMC,gBAGRC,EAFAC,GAAe,GAGZC,MAAK,SAAAC,GACJC,EAAKC,mBAAmB,YAAaC,EAAaH,EAAKI,UAEnDJ,EAAKK,OAASL,EAAKM,aACrBb,EAASc,UAAUpB,E,IAGtBqB,MAAMC,QAAQC,Q,MA1BT,CACZC,KAAM,KACNC,WAAY,QACZC,UAAW,IAIPC,EAAW,gCACXC,EAAY,qBACZC,EAAU,mCACVf,EAAOb,SAASC,cAAc,YAChCS,EAAc,EAoBlB,SAASK,EAAac,GACpB,OAAOA,EACJC,KAAI,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,MACnB,MAAO,kEAE2DC,OAArBF,EAAY,WACjDE,OAD0DD,EAAM,sBAC1DC,OAAND,EAAM,qB,IAGfE,KAAK,G,CAGV,SAAS1B,I,IAAYQ,EAAAmB,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAC1B,OAAOE,MAAM,GAAcJ,OAAXR,GAAgCQ,OAArBP,EAAU,aAA2BO,OAAhBN,EAAQ,UAAaM,OAALjB,IAAQN,MACtE,SAAA4B,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAE3B,OAAOH,EAASI,M,IAKtBlC,IACGE,MAAK,SAAAC,GACJC,EAAKC,mBAAmB,YAAaC,EAAaH,EAAKI,UACvDd,EAAS0C,QAAQ7C,E,IAElBqB,MAAMC,QAAQC,Q","sources":["src/partials/js/weather-api.js"],"sourcesContent":["// const BASE_URL = 'https://the-one-api.dev/v2';\n// const END_POINT = 'character';\n// const KEY = 'iiV9hREM10W3rPS2VIK4';\n\n// function getCharacter() {\n//   const param = new URLSearchParams({\n//     limit: 30,\n//     page: 1,\n//   });\n\n//   const option = {\n//     method: 'GET',\n//     Headers: {\n//       Authorization: `{Bearer ${KEY}}`,\n//     },\n//   };\n\n//   fetch(`${BASE_URL}${END_POINT}?${param}`, option).then(response =>\n//     console.log(response)\n//   );\n// }\n\n// getCharacter();\n\n// const target = document.querySelector('.js-guard');\n\n// let options = {\n//   root: null,\n//   rootMargin: '200px',\n//   threshold: 1.0,\n// };\n\n// let observer = new IntersectionObserver(callback, options);\n\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n// const END_POINT = 'trending/movie/day';\n// const API_KEY = '345007f9ab440e5b86cef51be6397df1';\n// const list = document.querySelector('.js-list');\n// const button = document.querySelector('.js-load');\n// let currentPage = 1;\n\n// button.addEventListener('click', onLoad);\n\n// function callback() {}\n\n// function onLoad() {\n//   currentPage += 1;\n//   getTrending(currentPage)\n//     .then(data => {\n//       list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//       observer.observe(target);\n//       if (data.page === data.total_pages) {\n//         button.hidden = true;\n//       }\n//     })\n//     .catch(console.error());\n// }\n\n// function getTrending(page = 1) {\n//   return fetch(`${BASE_URL}${END_POINT}?api_key=${API_KEY}&page=${page}`).then(\n//     response => {\n//       if (!response.ok) {\n//         throw new Error(response.statusText);\n//       }\n//       return response.json();\n//     }\n//   );\n// }\n\n// getTrending()\n//   .then(data => {\n//     list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//     observer.observe(target);\n\n//     if (data.page !== data.total_pages) {\n//       button.hidden = false;\n//     }\n//   })\n//   .catch(console.error());\n\n// function createMarkup(arr) {\n//   return arr\n//     .map(({ poster_path, title }) => {\n//       return `\n//       <li>\n//         <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\" />\n//         <h2>${title}</h2>\n//       </li>`;\n//     })\n//     .join('');\n// }\n\nconst target = document.querySelector('.js-guard');\nlet options = {\n  root: null,\n  rootMargin: '200px',\n  threshold: 1.0,\n};\nlet observer = new IntersectionObserver(onLoad, options);\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst END_POINT = 'trending/movie/day';\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\nconst list = document.querySelector('.js-list');\nlet currentPage = 1;\n\nfunction onLoad(entries, observer) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n\n      getTrending(currentPage)\n        .then(data => {\n          list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n\n          if (data.page === data.total_pages) {\n            observer.unobserve(target);\n          }\n        })\n        .catch(console.error());\n    }\n  });\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(({ poster_path, title }) => {\n      return `\n      <li>\n        <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\" />\n        <h2>${title}</h2>\n      </li>`;\n    })\n    .join('');\n}\n\nfunction getTrending(page = 1) {\n  return fetch(`${BASE_URL}${END_POINT}?api_key=${API_KEY}&page=${page}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    }\n  );\n}\n\ngetTrending()\n  .then(data => {\n    list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n    observer.observe(target);\n  })\n  .catch(console.error());\n"],"names":["$309129a222c29902$var$target","document","querySelector","$309129a222c29902$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","$309129a222c29902$var$getTrending","$309129a222c29902$var$currentPage","then","data","$309129a222c29902$var$list","insertAdjacentHTML","$309129a222c29902$var$createMarkup","results","page","total_pages","unobserve","catch","console","error","root","rootMargin","threshold","$309129a222c29902$var$BASE_URL","$309129a222c29902$var$END_POINT","$309129a222c29902$var$API_KEY","arr","map","param","poster_path","title","concat","join","arguments","length","fetch","response","ok","Error","statusText","json","observe"],"version":3,"file":"index.da2a1c33.js.map"}